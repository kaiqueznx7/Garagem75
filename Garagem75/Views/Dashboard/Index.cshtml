@model Garagem75.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<style>
    .chart-card .card-body {
        background: #121212;
        color: #fff;
        min-height: 320px;
    }

    .chart-card canvas {
        width: 100% !important;
        height: 260px !important;
    }
</style>

<div class="container-fluid py-3">
    <h2 class="mb-4">📊 Dashboard</h2>


    <!-- Cards de KPIs movidos para baixo -->
    <div class="row g-3 mt-3">
        <div class="col-6 col-md-3">
            <div class="card shadow-sm h-100">
                <div class="card-body bg-dark text-light">
                    <div class="fs-1 fw-bold">@Model.TotalPecas</div>
                    <div class="text-light">Peças</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="card shadow-sm h-100">
                <div class="card-body bg-dark text-light">
                    <div class="fs-1 fw-bold">@Model.TotalClientes</div>
                    <div class="text-light">Clientes</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="card shadow-sm h-100">
                <div class="card-body bg-dark text-light">
                    <div class="fs-1 fw-bold">@Model.TotalOrdensServico</div>
                    <div class="text-light">Ordens de Serviço</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="card shadow-sm h-100">
                <div class="card-body bg-dark text-light">
                    <div class="fs-1 fw-bold">@Model.TotalUsuarios</div>
                    <div class="text-light">Usuários</div>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-3 mt-1">
    <div class="col-12 col-lg-6">
        <div class="card shadow-sm h-100 chart-card">
            <div class="card-header fw-semibold bg-dark text-light">🏆 Top 5 Clientes mais antigos</div>
            <div class="card-body bg-dark text-light">
                @if (Model.ClientesMaisAntigos?.Count > 0)
                {
                    <div class="table-responsive">
                        <table class="table table-sm align-middle table-dark">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Nome</th>
                                    <th>Telefone</th>
                                    <th>Email</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var c in Model.ClientesMaisAntigos.Take(5))
                                {
                                    <tr>
                                        <td>@c.IdCliente</td>
                                        <td>@c.Nome</td>
                                        <td>@c.Telefone</td>
                                        <td>@c.Email</td>
                                        
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <p class="text-muted m-0">Sem Clientes cadastrados.</p>
                }
            </div>
        </div>
    </div>

    <div class="col-12 col-lg-6">
            <div class="card shadow-sm h-100 chart-card">
                <div class="card-header fw-semibold bg-dark text-light">🚗 Últimos 5 Veiculos Trabalhados</div>
                <div class="card-body bg-dark text-light">
                    @if (Model.UltimosVeiculosAtendidos?.Count > 0)
                    {
                        <div class="table-responsive">
                            <table class="table table-sm align-middle table-dark">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Fabricante</th>
                                        <th>Modelo</th>
                                        <th>Placa</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var c in Model.UltimosVeiculosAtendidos.Take(5))
                                    {
                                        <tr>
                                            <td>@c.IdVeiculo</td>
                                            <td>@c.Fabricante</td>
                                            <td>@c.Modelo</td>
                                            <td>@c.Placa</td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted m-0">Sem  cadastrados.</p>
                    }
                </div>
            </div>
        </div>
    </div>

                <div class="row g-3 mt-1">
                    <!-- Top Marcas de Peças -->
                    <div class="col-12 col-lg-3">
                        <div class="card shadow-sm h-100 chart-card">
                            <div class="card-header fw-semibold bg-dark text-light">🔩 Marcas de Peças mais utilizadas</div>
                            <div class="card-body bg-dark text-light">
                                <canvas id="chartPecas"></canvas>
                            </div>
                        </div>
                    </div>

                    <!-- Top Marcas de Veículos -->
                    <div class="col-12 col-lg-3">
                        <div class="card shadow-sm h-100 chart-card">
                            <div class="card-header fw-semibold bg-dark text-light">🚘 Marcas de Veículos mais comuns</div>
                            <div class="card-body bg-dark text-light">
                                <canvas id="chartVeiculos"></canvas>
                            </div>
                        </div>
                    </div>

                   @* <! -- Peças por Veiculo --> *@
        <div class="col-12 col-lg-3">
            <div class="card shadow-sm h-100 chart-card">
                <div class="card-header fw-semibold bg-dark text-light">🏆  Peças Usadas Por Veiculo</div>
                <div class="card-body bg-dark text-light">
                    <canvas id="chartTopVeiculos"></canvas>
                </div>
            </div>
        </div>
        <div class="col-12 col-lg-3">
            <div class="card shadow-sm h-100 chart-card">
                <div class="card shadow-sm h-100">
                    <div class="card-body bg-dark text-light">
                        <div class="text-light">Total Faturado na semana:</div>
                        <div class="fs-1 fw-bold">R$@Model.ValorTotalOrdensServico</div>
                     
                    </div>
                </div>
            </div>

        </div>
  
      


    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        const marcasPecas = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.MarcasPecasMaisUsadas));
        const marcasVeiculos = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.MarcasVeiculosMaisUsadas));

        // Paleta de cores personalizada (cores diferentes para cada fatia)
        const colors = [
            'rgba(255, 99, 132, 0.8)',
            'rgba(54, 162, 235, 0.8)',
            'rgba(255, 206, 86, 0.8)',
            'rgba(75, 192, 192, 0.8)',
            'rgba(153, 102, 255, 0.8)'
        ];

        // === GRÁFICO DE PEÇAS ===
        new Chart(document.getElementById('chartPecas'), {
            type: 'pie',
            data: {
                labels: marcasPecas.map(m => m.NomeMarca),
                datasets: [{
                    label: 'Peças por Marca',
                    data: marcasPecas.map(m => m.Quantidade),
                    backgroundColor: colors,
                    borderColor: '#121212',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: { color: '#fff' }
                    },
                    title: {
                        display: false
                    }
                }
            }
        });

        // === GRÁFICO DE VEÍCULOS ===
        new Chart(document.getElementById('chartVeiculos'), {
            type: 'doughnut',
            data: {
                labels: marcasVeiculos.map(m => m.NomeMarca),
                datasets: [{
                    label: 'Veículos por Marca',
                    data: marcasVeiculos.map(m => m.Quantidade),
                    backgroundColor: colors,
                    borderColor: '#121212',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: { color: '#fff' }
                    },
                    title: {
                        display: false
                    }
                }
            }
        });

    // 3) Veiculos com que utilizaram mais peças (Barras Horizontais)
    const topGenerosLabels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.PecasPorVeiculo.Select(o => o.Modelo)));
    const topGenerosData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.PecasPorVeiculo.Select(o => o.QuantidadePecas)));

    new Chart(document.getElementById('chartTopVeiculos'), {
        type: 'bar',
        data: {
            labels: topGenerosLabels,
            datasets: [{
                label: 'Qtd Peças',
                data: topGenerosData,
                backgroundColor: "rgba(34, 211, 238, 0.85)",
                borderColor: "rgba(34, 211, 238, 1)",
                borderWidth: 1
            }]
        },
        options: {
            indexAxis: 'x', // ← barras horizontais
            responsive: true,
            maintainAspectRatio: false,
            plugins: { legend: { display: false } },
            scales: {
                x: { beginAtZero: true, ticks: { stepSize: 1 } },
                y: { ticks: { autoSkip: false } }
            },
            layout: { padding: { bottom: 0, top: 0 } }
        }
    });

    </script>







