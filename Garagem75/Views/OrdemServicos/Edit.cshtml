@model Garagem75.Models.OrdemServico

@{
    ViewData["Title"] = "Editar ordem de serviço";
}

<h1>Editar</h1>

<h4>Ordem de Servico</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="IdOrdemServico" />
            <div class="form-group">
                <label asp-for="Descricao" class="control-label"></label>
                <input asp-for="Descricao" class="form-control" />
                <span asp-validation-for="Descricao" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataServico" class="control-label"></label>
                <input asp-for="DataServico" class="form-control" />
                <span asp-validation-for="DataServico" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MaoDeObra" class="control-label"></label>
                <input asp-for="MaoDeObra" type="text" class="form-control" />
                <span asp-validation-for="MaoDeObra" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ValorDesconto" class="control-label"></label>
                <input asp-for="ValorDesconto" type="text" class="form-control" />
                <span asp-validation-for="ValorDesconto" class="text-danger"></span>
            </div>
            @* <div class="form-group"> *@
            @*     <label asp-for="ValorTotal" class="control-label"></label> *@
            @*     <input asp-for="ValorTotal" class="form-control" /> *@
            @*     <span asp-validation-for="ValorTotal" class="text-danger"></span> *@
            @* </div> *@
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <input asp-for="Status" class="form-control" />
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataEntrega" class="control-label"></label>
                <input asp-for="DataEntrega" class="form-control" />
                <span asp-validation-for="DataEntrega" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="VeiculoId" class="control-label"></label>
                <select asp-for="VeiculoId" class="form-control" asp-items="ViewBag.VeiculoId">
                    <option value="">Selecione um veículo</option>
                </select>
                <span asp-validation-for="VeiculoId" class="text-danger"></span>
            </div>
            <h4>Peças utilizadas</h4>
            <div class="form-group">
                <table class="table table-sm">
                    <thead>
                        <tr>
                            <th>Peça</th>
                            <th>Preço Unitário</th>
                            <th>Quantidade</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            // Cria um dicionário para busca rápida das quantidades existentes
                            // O controller Edit(GET) deve incluir PecasAssociadas.
                            var pecasAssociadasDict = Model.PecasAssociadas.ToDictionary(pa => pa.PecaId, pa => pa.Quantidade);
                        }

                        @foreach (var peca in (List<Garagem75.Models.Peca>)ViewBag.Pecas)
                        {
                            // Verifica se esta peça está associada e pega a quantidade, caso contrário, é zero.
                            var quantidadeExistente = pecasAssociadasDict.GetValueOrDefault(peca.IdPeca, 0);

                            <tr>
                                <td>@peca.Nome</td>
                                <td>R$ @peca.Preco.ToString("N2")</td>
                                <td>
                                    @* CAMPO HIDDEN (pecaIds): Usado para mapear o ID no Controller *@
                                    @* Ele será populado via JS SOMENTE se a quantidade for > 0 *@
                                    <input type="hidden" class="peca-id-input" value="@peca.IdPeca" disabled />

                                    @* CAMPO DE QUANTIDADE: Pré-preenchido com a quantidade existente *@
                                    <input type="number"
                                           class="form-control form-control-sm peca-quantidade-input"
                                           data-peca-id="@peca.IdPeca"
                                           value="@quantidadeExistente"
                                           min="0"
                                           style="width: 80px;" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Voltar</a>
            </div>
        </form>
    </div>
</div>

<div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Esta função sobrescreve o método 'number' do jQuery Validation
        // para aceitar a vírgula (',') como separador decimal.
        $.validator.methods.number = function (value, element) {
            // Se o campo for opcional e vazio, retorna true
            if (this.optional(element)) {
                return true;
            }

            // 1. Substitui a vírgula por ponto no valor (para que o JS entenda como float)
            var val_ajustado = value.replace(/,/g, '.');

            // 2. Tenta converter para um número
            // isNaN(parseFloat(val_ajustado)) é a validação de que é um número
            return !isNaN(parseFloat(val_ajustado));
        };
    </script>

    

    <script>
        $(document).ready(function () {
            // Ação disparada ao submeter o formulário de EDIÇÃO
            $('form').submit(function (e) {

                // Remove quaisquer campos pecaIds que possam ter sido adicionados anteriormente
                // (Para evitar problemas se o usuário clicar duas vezes rapidamente)
                $('input[name="pecaIds"]').remove();

                // Para cada campo de quantidade
                $('.peca-quantidade-input').each(function () {
                    var quantidade = parseInt($(this).val());
                    var pecaId = $(this).data('peca-id');

                    // Se a quantidade for válida (maior que zero)
                    if (quantidade > 0) {

                        // 1. Adiciona o campo HIDDEN 'pecaIds' para mapear o ID
                        $('<input>').attr({
                            type: 'hidden',
                            name: 'pecaIds',
                            value: pecaId
                        }).appendTo('form');

                        // 2. Renomeia o campo de Quantidade para 'quantidades':
                        // Isso garante que o valor correto da quantidade seja submetido
                        $(this).attr('name', 'quantidades');

                    } else {
                        // Se a quantidade for zero, remove o atributo 'name' do campo de quantidade
                        // para que ele NÃO seja enviado ao Controller.
                        $(this).removeAttr('name');
                    }
                });

                // Permite que o formulário continue a submissão
                return true;
            });
        });
    </script>
}

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>